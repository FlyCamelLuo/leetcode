def findMedianSortedArrays(nums1, nums2):
    n = len(nums1) + len(nums2)
    if n % 2 == 1:
        return find_k(nums1, nums2, n // 2 + 1)
    else:
        return (find_k(nums1, nums2, n // 2 + 1) + find_k(nums1, nums2, n // 2)) / 2


def find_k(nums1, nums2, k):
    if (len(nums1) > len(nums2)): return find_k(nums2, nums1, k)
    if (len(nums1) == 0): return nums2[k - 1]
    if (k == 1): return min(nums1[0], nums2[0])
    n1 = min(len(nums1), k // 2)
    n2 = k - n1

    if (nums1[n1 - 1] < nums2[n2 - 1]):
        return find_k(nums1[n1:], nums2[:n2], k - n1)
    elif (nums1[n1 - 1] > nums2[n2 - 1]):
        return find_k(nums1[:n1], nums2[n2:], k - n2)
    else:
        return nums1[n1 - 1]



